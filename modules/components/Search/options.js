export const cities = () => {
  return (
    [
      { value: '324', label: 'Afton' },
      { value: '822', label: 'Alpine' },
      { value: '885', label: 'Alta' },
      { value: '905', label: 'Altamont' },
      { value: '934', label: 'Alton' },
      { value: '940', label: 'Altonah' },
      { value: '1019', label: 'Amalga' },
      { value: '1069', label: 'American Falls' },
      { value: '1070', label: 'American Fork' },
      { value: '1271', label: 'Annabella' },
      { value: '1325', label: 'Antimony' },
      { value: '1559', label: 'Arimo' },
      { value: '1827', label: 'Ashton' },
      { value: '2027', label: 'Auburn' },
      { value: '2097', label: 'Aurora' },
      { value: '2196', label: 'Avon' },
      { value: '2225', label: 'Axtell' },
      { value: '2432', label: 'Ballard' },
      { value: '2473', label: 'Bancroft' },
      { value: '3093', label: 'Bear River City' },
      { value: '3149', label: 'Beaver' },
      { value: '3182', label: 'Beaverdam' },
      { value: '3224', label: 'Bedford' },
      { value: '3610', label: 'Benjamin' },
      { value: '3648', label: 'Benson' },
      { value: '3829', label: 'Beryl' },
      { value: '3830', label: 'Beryl Junction' },
      { value: '3972', label: 'Bicknell' },
      { value: '4070', label: 'Big Water' },
      { value: '4173', label: 'Birdseye' },
      { value: '4286', label: 'Blackfoot' },
      { value: '4397', label: 'Blanding' },
      { value: '58502', label: 'Bloomington' },
      { value: '4496', label: 'Bloomington' },
      { value: '4599', label: 'Bluebell' },
      { value: '4613', label: 'Bluff' },
      { value: '4628', label: 'Bluffdale' },
      { value: '5068', label: 'Bothwell' },
      { value: '5085', label: 'Boulder' },
      { value: '5100', label: 'Bountiful' },
      { value: '5521', label: 'Brian Head' },
      { value: '5553', label: 'Bridgeland' },
      { value: '5613', label: 'Brigham City' },
      { value: '5627', label: 'Brighton' },
      { value: '5902', label: 'Brookside' },
      { value: '6422', label: 'Burmester' },
      { value: '7259', label: 'Carbonville' },
      { value: '7625', label: 'Castle Dale' },
      { value: '7638', label: 'Castle Valley' },
      { value: '7784', label: 'Cedar City' },
      { value: '7797', label: 'Cedar Fort' },
      { value: '7814', label: 'Cedar Hills' },
      { value: '7852', label: 'Cedar Valley' },
      { value: '7927', label: 'Center Creek' },
      { value: '7963', label: 'Centerfield' },
      { value: '8000', label: 'Centerville' },
      { value: '8040', label: 'Central Valley' },
      { value: '8244', label: 'Charleston' },
      { value: '8500', label: 'Chester' },
      { value: '8807', label: 'Circleville' },
      { value: '8814', label: 'Cisco' },
      { value: '8972', label: 'Clarkston' },
      { value: '9100', label: 'Clearfield' },
      { value: '9185', label: 'Cleveland' },
      { value: '9220', label: 'Clifton' },
      { value: '9292', label: 'Clinton' },
      { value: '9439', label: 'Coalville' },
      { value: '9550', label: 'Cokeville' },
      { value: '9700', label: 'College Ward' },
      { value: '9730', label: 'Collinston' },
      { value: '10234', label: 'Copperton' },
      { value: '10287', label: 'Corinne' },
      { value: '10344', label: 'Cornish' },
      { value: '10499', label: 'Cottonwood Heights' },
      { value: '10564', label: 'Cove' },
      { value: '11023', label: 'Croydon' },
      { value: '11428', label: 'Dammeron Valley' },
      { value: '61799', label: 'Daniel' },
      { value: '11654', label: 'Dayton' },
      { value: '11825', label: 'Deer Valley' },
      { value: '11995', label: 'Delta' },
      { value: '12347', label: 'Dingle' },
      { value: '12688', label: 'Downey' },
      { value: '12730', label: 'Draper' },
      { value: '12808', label: 'Dry Fork' },
      { value: '12865', label: 'Duchesne' },
      { value: '12869', label: 'Duck Creek Village' },
      { value: '13175', label: 'Eagle Mountain' },
      { value: '13305', label: 'East Carbon' },
      { value: '13781', label: 'Echo' },
      { value: '13835', label: 'Eden' },
      { value: '14129', label: 'Elberta' },
      { value: '14272', label: 'Elk Ridge' },
      { value: '14471', label: 'Elmo' },
      { value: '14525', label: 'Elsinore' },
      { value: '14556', label: 'Elwood' },
      { value: '14600', label: 'Emery' },
      { value: '58155', label: 'Emigration Canyon' },
      { value: '14743', label: 'Enoch' },
      { value: '14781', label: 'Enterprise' },
      { value: '14796', label: 'Ephraim' },
      { value: '14823', label: 'Erda' },
      { value: '14871', label: 'Escalante' },
      { value: '15016', label: 'Etna' },
      { value: '15076', label: 'Eureka' },
      { value: '15433', label: 'Fairfield' },
      { value: '15523', label: 'Fairview' },
      { value: '15703', label: 'Farmington' },
      { value: '15721', label: 'Farr West' },
      { value: '15752', label: 'Faust' },
      { value: '15772', label: 'Fayette' },
      { value: '15908', label: 'Ferron' },
      { value: '15929', label: 'Fielding' },
      { value: '15965', label: 'Fillmore' },
      { value: '16020', label: 'Fish Haven' },
      { value: '16023', label: 'Fish Lake' },
      { value: '16520', label: 'Fort Duchesne' },
      { value: '16742', label: 'Fountain Green' },
      { value: '16841', label: 'Francis' },
      { value: '16876', label: 'Franklin' },
      { value: '17007', label: 'Freedom' },
      { value: '17059', label: 'Fremont' },
      { value: '17178', label: 'Fruit Heights' },
      { value: '17192', label: 'Fruitland' },
      { value: '17459', label: 'Garden City' },
      { value: '17526', label: 'Garland' },
      { value: '17695', label: 'Geneva' },
      { value: '17721', label: 'Genola' },
      { value: '17746', label: 'Georgetown' },
      { value: '18150', label: 'Glendale' },
      { value: '18240', label: 'Glenwood' },
      { value: '18534', label: 'Goshen' },
      { value: '18573', label: 'Grace' },
      { value: '18815', label: 'Grantsville' },
      { value: '19026', label: 'Green River' },
      { value: '19082', label: 'Greendale' },
      { value: '19187', label: 'Greenville' },
      { value: '19361', label: 'Grouse Creek' },
      { value: '19391', label: 'Grover' },
      { value: '19508', label: 'Gunlock' },
      { value: '19512', label: 'Gunnison' },
      { value: '19527', label: 'Gusher' },
      { value: '19949', label: 'Hanksville' },
      { value: '19959', label: 'Hanna' },
      { value: '20246', label: 'Harrisville' },
      { value: '20411', label: 'Hatch' },
      { value: '20680', label: 'Heber City' },
      { value: '20783', label: 'Helper' },
      { value: '20842', label: 'Henefer' },
      { value: '20960', label: 'Herriman' },
      { value: '60293', label: 'Hideout' },
      { value: '21158', label: 'Highland' },
      { value: '21213', label: 'Hildale' },
      { value: '21354', label: 'Hinckley' },
      { value: '21511', label: 'Holden' },
      { value: '21532', label: 'Holladay' },
      { value: '21748', label: 'Honeyville' },
      { value: '21778', label: 'Hooper' },
      { value: '22012', label: 'Howell' },
      { value: '22038', label: 'Hoytsville' },
      { value: '22238', label: 'Huntington' },
      { value: '22273', label: 'Huntsville' },
      { value: '22299', label: 'Hurricane' },
      { value: '22357', label: 'Hyde Park' },
      { value: '22375', label: 'Hyrum' },
      { value: '22399', label: 'Idaho Falls' },
      { value: '22564', label: 'Indianola' },
      { value: '22627', label: 'Inkom' },
      { value: '22672', label: 'Ioka' },
      { value: '22796', label: 'Irwin' },
      { value: '22896', label: 'Ivins' },
      { value: '23291', label: 'Jensen' },
      { value: '23536', label: 'Joseph' },
      { value: '23589', label: 'Junction' },
      { value: '23668', label: 'Kamas' },
      { value: '23680', label: 'Kanab' },
      { value: '23682', label: 'Kanarraville' },
      { value: '23701', label: 'Kanosh' },
      { value: '23776', label: 'Kaysville' },
      { value: '23787', label: 'Kearns' },
      { value: '23952', label: 'Kenilworth' },
      { value: '24225', label: 'Kimball Junction' },
      { value: '24607', label: 'Koosharem' },
      { value: '24824', label: 'La Sal' },
      { value: '24838', label: 'La Verkin' },
      { value: '25189', label: 'Lake Point' },
      { value: '25209', label: 'Lake Shore' },
      { value: '25321', label: 'Laketown' },
      { value: '25589', label: 'Lapoint' },
      { value: '25751', label: 'Lava Hot Springs' },
      { value: '25840', label: 'Layton' },
      { value: '25889', label: 'Leamington' },
      { value: '25982', label: 'Leeds' },
      { value: '26027', label: 'Lehi' },
      { value: '26232', label: 'Levan' },
      { value: '26290', label: 'Lewiston' },
      { value: '26360', label: 'Liberty' },
      { value: '26575', label: 'Lindon' },
      { value: '26863', label: 'Loa' },
      { value: '26985', label: 'Logan' },
      { value: '27659', label: 'Lyman' },
      { value: '27718', label: 'Lynndyl' },
      { value: '27923', label: 'Maeser' },
      { value: '27935', label: 'Magna' },
      { value: '28010', label: 'Malad City' },
      { value: '28172', label: 'Manila' },
      { value: '28302', label: 'Manti' },
      { value: '28310', label: 'Mantua' },
      { value: '28383', label: 'Mapleton' },
      { value: '28544', label: 'Marion' },
      { value: '28776', label: 'Marysvale' },
      { value: '29015', label: 'Mayfield' },
      { value: '29269', label: 'McCammon' },
      { value: '29445', label: 'Meadow' },
      { value: '29684', label: 'Mendon' },
      { value: '30095', label: 'Midvale' },
      { value: '30117', label: 'Midway' },
      { value: '30166', label: 'Milburn' },
      { value: '30205', label: 'Milford' },
      { value: '30376', label: 'Millville' },
      { value: '30494', label: 'Minersville' },
      { value: '30649', label: 'Moab' },
      { value: '30675', label: 'Modena' },
      { value: '30744', label: 'Mona' },
      { value: '30751', label: 'Monarch' },
      { value: '30832', label: 'Monroe' },
      { value: '30977', label: 'Monticello' },
      { value: '30991', label: 'Montpelier' },
      { value: '31165', label: 'Morgan' },
      { value: '31218', label: 'Moroni' },
      { value: '31433', label: 'Mount Carmel' },
      { value: '31555', label: 'Mount Pleasant' },
      { value: '31661', label: 'Mountain Green' },
      { value: '31668', label: 'Mountain Home' },
      { value: '31854', label: 'Murray' },
      { value: '31921', label: 'Myton' },
      { value: '31987', label: 'Naples' },
      { value: '32242', label: 'Neola' },
      { value: '32252', label: 'Nephi' },
      { value: '32474', label: 'New Harmony' },
      { value: '32805', label: 'Newcastle' },
      { value: '32908', label: 'Newton' },
      { value: '32954', label: 'Nibley' },
      { value: '33416', label: 'North Logan' },
      { value: '33460', label: 'North Ogden' },
      { value: '33518', label: 'North Salt Lake' },
      { value: '33855', label: 'Oak City' },
      { value: '33997', label: 'Oakley' },
      { value: '34183', label: 'Ogden' },
      { value: '34572', label: 'Ophir' },
      { value: '34624', label: 'Orangeville' },
      { value: '34649', label: 'Orderville' },
      { value: '34673', label: 'Orem' },
      { value: '35129', label: 'Page' },
      { value: '35322', label: 'Panguitch' },
      { value: '35373', label: 'Paradise' },
      { value: '35389', label: 'Paragonah' },
      { value: '35469', label: 'Paris' },
      { value: '35496', label: 'Park City' },
      { value: '35517', label: 'Park Valley' },
      { value: '35603', label: 'Parowan' },
      { value: '35859', label: 'Payson' },
      { value: '36133', label: 'Peoa' },
      { value: '36222', label: 'Perry' },
      { value: '36284', label: 'Petersboro' },
      { value: '36310', label: 'Peterson' },
      { value: '36585', label: 'Pine Canyon' },
      { value: '36659', label: 'Pine Valley' },
      { value: '36678', label: 'Pinedale' },
      { value: '36877', label: 'Plain City' },
      { value: '36992', label: 'Pleasant Grove' },
      { value: '37054', label: 'Pleasant View' },
      { value: '37133', label: 'Plymouth' },
      { value: '37157', label: 'Pocatello' },
      { value: '37484', label: 'Portage' },
      { value: '37518', label: 'Porterville' },
      { value: '37808', label: 'Preston' },
      { value: '37837', label: 'Price' },
      { value: '37987', label: 'Providence' },
      { value: '37994', label: 'Provo' },
      { value: '38436', label: 'Randlett' },
      { value: '38456', label: 'Randolph' },
      { value: '38784', label: 'Redmond' },
      { value: '39216', label: 'Richfield' },
      { value: '39266', label: 'Richmond' },
      { value: '39527', label: 'River Heights' },
      { value: '39555', label: 'Riverdale' },
      { value: '39584', label: 'Riverside' },
      { value: '39600', label: 'Riverton' },
      { value: '39863', label: 'Rockland' },
      { value: '39904', label: 'Rockville' },
      { value: '40103', label: 'Roosevelt' },
      { value: '40414', label: 'Roy' },
      { value: '40558', label: 'Rush Valley' },
      { value: '40808', label: 'Saint Charles' },
      { value: '40866', label: 'Saint George' },
      { value: '41075', label: 'Salem' },
      { value: '41095', label: 'Salina' },
      { value: '41128', label: 'Salmon' },
      { value: '41140', label: 'Salt Lake City' },
      { value: '41394', label: 'Sandy' },
      { value: '41463', label: 'Santa Clara' },
      { value: '41503', label: 'Santaquin' },
      { value: '41548', label: 'Saratoga Springs' },
      { value: '41813', label: 'Scipio' },
      { value: '41823', label: 'Scofield' },
      { value: '42905', label: 'Sigurd' },
      { value: '43176', label: 'Slaterville' },
      { value: '43264', label: 'Smithfield' },
      { value: '43315', label: 'Smoot' },
      { value: '43362', label: 'Snowbird' },
      { value: '43371', label: 'Snowville' },
      { value: '43388', label: 'Snyderville' },
      { value: '43401', label: 'Soda Springs' },
      { value: '43432', label: 'Solitude' },
      { value: '43715', label: 'South Jordan' },
      { value: '43775', label: 'South Ogden' },
      { value: '43836', label: 'South Salt Lake' },
      { value: '43882', label: 'South Weber' },
      { value: '43981', label: 'Spanish Fork' },
      { value: '44148', label: 'Spring City' },
      { value: '44165', label: 'Spring Glen' },
      { value: '44197', label: 'Spring Lake' },
      { value: '44240', label: 'Springdale' },
      { value: '44309', label: 'Springville' },
      { value: '44437', label: 'Stansbury Park' },
      { value: '44649', label: 'Sterling' },
      { value: '44794', label: 'Stockton' },
      { value: '44802', label: 'Stoddard' },
      { value: '44811', label: 'Stone' },
      { value: '45249', label: 'Summit' },
      { value: '45321', label: 'Sundance' },
      { value: '45363', label: 'Sunnyside' },
      { value: '45387', label: 'Sunset' },
      { value: '45496', label: 'Swan Creek' },
      { value: '45507', label: 'Swanlake' },
      { value: '45671', label: 'Syracuse' },
      { value: '45685', label: 'Tabiona' },
      { value: '45777', label: 'Talmage' },
      { value: '45917', label: 'Taylor' },
      { value: '45937', label: 'Taylorsville' },
      { value: '45954', label: 'Teasdale' },
      { value: '46136', label: 'Thatcher' },
      { value: '46134', label: 'Thatcher' },
      { value: '46147', label: 'Thayne' },
      { value: '46203', label: 'Thistle' },
      { value: '46241', label: 'Thompson' },
      { value: '46363', label: 'Ticaboo' },
      { value: '46646', label: 'Tooele' },
      { value: '46683', label: 'Toquerville' },
      { value: '46702', label: 'Torrey' },
      { value: '46849', label: 'Tremonton' },
      { value: '46874', label: 'Trenton' },
      { value: '46904', label: 'Tridell' },
      { value: '46955', label: 'Tropic' },
      { value: '47339', label: 'Uintah' },
      { value: '48874', label: 'Venice' },
      { value: '48935', label: 'Vernal' },
      { value: '48958', label: 'Vernon' },
      { value: '49019', label: 'Veyo' },
      { value: '49360', label: 'Vineyard' },
      { value: '49404', label: 'Virgin' },
      { value: '49671', label: 'Wales' },
      { value: '49765', label: 'Wallsburg' },
      { value: '49877', label: 'Wanship' },
      { value: '50077', label: 'Washington' },
      { value: '50095', label: 'Washington Terrace' },
      { value: '50324', label: 'Wayan' },
      { value: '50540', label: 'Wellington' },
      { value: '50574', label: 'Wellsville' },
      { value: '50598', label: 'Wendover' },
      { value: '50701', label: 'West Bountiful' },
      { value: '50874', label: 'West Haven' },
      { value: '50902', label: 'West Jordan' },
      { value: '51042', label: 'West Point' },
      { value: '51129', label: 'West Valley City' },
      { value: '51138', label: 'West Warren' },
      { value: '51142', label: 'West Weber' },
      { value: '51274', label: 'Weston' },
      { value: '51500', label: 'White City' },
      { value: '51627', label: 'Whiterocks' },
      { value: '51859', label: 'Willard' },
      { value: '52541', label: 'Woodland' },
      { value: '52546', label: 'Woodland Hills' },
      { value: '52591', label: 'Woods Cross' },
      { value: '52984', label: 'Young Ward' }
    ]
  )
}

export const counties = () => {
  return (
    [
      { value: '1219', label: 'Bannock' },
      { value: '1913', label: 'Bear Lake' },
      { value: '384', label: 'Beaver' },
      { value: '273', label: 'Bingham' },
      { value: '974', label: 'Bonneville' },
      { value: '1765', label: 'Box Elder' },
      { value: '919', label: 'Cache' },
      { value: '2562', label: 'Carbon' },
      { value: '1592', label: 'Caribou' },
      { value: '1852', label: 'Coconino' },
      { value: '2953', label: 'Daggett' },
      { value: '999', label: 'Davis' },
      { value: '852', label: 'Duchesne' },
      { value: '2595', label: 'Emery' },
      { value: '2728', label: 'Franklin' },
      { value: '1083', label: 'Fremont' },
      { value: '1040', label: 'Garfield' },
      { value: '1177', label: 'Grand' },
      { value: '1957', label: 'Iron' },
      { value: '3017', label: 'Juab' },
      { value: '870', label: 'Kane' },
      { value: '1554', label: 'Lemhi' },
      { value: '453', label: 'Lincoln' },
      { value: '298', label: 'Millard' },
      { value: '2853', label: 'Morgan' },
      { value: '2658', label: 'Oneida' },
      { value: '2696', label: 'Piute' },
      { value: '914', label: 'Power' },
      { value: '3100', label: 'Rich' },
      { value: '840', label: 'Salt Lake' },
      { value: '1036', label: 'San Juan' },
      { value: '1504', label: 'Sanpete' },
      { value: '1055', label: 'Sevier' },
      { value: '2013', label: 'Sublette' },
      { value: '2745', label: 'Summit' },
      { value: '1720', label: 'Tooele' },
      { value: '2185', label: 'Uintah' },
      { value: '808', label: 'Utah' },
      { value: '2620', label: 'Wasatch' },
      { value: '1119', label: 'Washington' },
      { value: '1995', label: 'Wayne' },
      { value: '2967', label: 'Weber' }
    ]
  )
}

export const postalCodes = () => {
  return (
    [
      { value: '82941', label: '82941' },
      { value: '83110', label: '83110' },
      { value: '83111', label: '83111' },
      { value: '83112', label: '83112' },
      { value: '83114', label: '83114' },
      { value: '83120', label: '83120' },
      { value: '83126', label: '83126' },
      { value: '83127', label: '83127' },
      { value: '83201', label: '83201' },
      { value: '83202', label: '83202' },
      { value: '83204', label: '83204' },
      { value: '83211', label: '83211' },
      { value: '83214', label: '83214' },
      { value: '83217', label: '83217' },
      { value: '83221', label: '83221' },
      { value: '83223', label: '83223' },
      { value: '83228', label: '83228' },
      { value: '83232', label: '83232' },
      { value: '83233', label: '83233' },
      { value: '83234', label: '83234' },
      { value: '83237', label: '83237' },
      { value: '83238', label: '83238' },
      { value: '83239', label: '83239' },
      { value: '83241', label: '83241' },
      { value: '83245', label: '83245' },
      { value: '83246', label: '83246' },
      { value: '83250', label: '83250' },
      { value: '83252', label: '83252' },
      { value: '83254', label: '83254' },
      { value: '83261', label: '83261' },
      { value: '83263', label: '83263' },
      { value: '83271', label: '83271' },
      { value: '83272', label: '83272' },
      { value: '83276', label: '83276' },
      { value: '83281', label: '83281' },
      { value: '83283', label: '83283' },
      { value: '83285', label: '83285' },
      { value: '83286', label: '83286' },
      { value: '83287', label: '83287' },
      { value: '83401', label: '83401' },
      { value: '83420', label: '83420' },
      { value: '83428', label: '83428' },
      { value: '83467', label: '83467' },
      { value: '84001', label: '84001' },
      { value: '84002', label: '84002' },
      { value: '84003', label: '84003' },
      { value: '84004', label: '84004' },
      { value: '84005', label: '84005' },
      { value: '84006', label: '84006' },
      { value: '84007', label: '84007' },
      { value: '84010', label: '84010' },
      { value: '84013', label: '84013' },
      { value: '84014', label: '84014' },
      { value: '84015', label: '84015' },
      { value: '84017', label: '84017' },
      { value: '84018', label: '84018' },
      { value: '84020', label: '84020' },
      { value: '84021', label: '84021' },
      { value: '84023', label: '84023' },
      { value: '84024', label: '84024' },
      { value: '84025', label: '84025' },
      { value: '84026', label: '84026' },
      { value: '84027', label: '84027' },
      { value: '84028', label: '84028' },
      { value: '84029', label: '84029' },
      { value: '84031', label: '84031' },
      { value: '84032', label: '84032' },
      { value: '84033', label: '84033' },
      { value: '84035', label: '84035' },
      { value: '84036', label: '84036' },
      { value: '84037', label: '84037' },
      { value: '84038', label: '84038' },
      { value: '84039', label: '84039' },
      { value: '84040', label: '84040' },
      { value: '84041', label: '84041' },
      { value: '84042', label: '84042' },
      { value: '84043', label: '84043' },
      { value: '84044', label: '84044' },
      { value: '84045', label: '84045' },
      { value: '84046', label: '84046' },
      { value: '84047', label: '84047' },
      { value: '84049', label: '84049' },
      { value: '84050', label: '84050' },
      { value: '84051', label: '84051' },
      { value: '84052', label: '84052' },
      { value: '84053', label: '84053' },
      { value: '84054', label: '84054' },
      { value: '84055', label: '84055' },
      { value: '84057', label: '84057' },
      { value: '84058', label: '84058' },
      { value: '84060', label: '84060' },
      { value: '84061', label: '84061' },
      { value: '84062', label: '84062' },
      { value: '84063', label: '84063' },
      { value: '84064', label: '84064' },
      { value: '84065', label: '84065' },
      { value: '84066', label: '84066' },
      { value: '84067', label: '84067' },
      { value: '84069', label: '84069' },
      { value: '84070', label: '84070' },
      { value: '84071', label: '84071' },
      { value: '84072', label: '84072' },
      { value: '84073', label: '84073' },
      { value: '84074', label: '84074' },
      { value: '84075', label: '84075' },
      { value: '84076', label: '84076' },
      { value: '84078', label: '84078' },
      { value: '84080', label: '84080' },
      { value: '84081', label: '84081' },
      { value: '84082', label: '84082' },
      { value: '84083', label: '84083' },
      { value: '84084', label: '84084' },
      { value: '84085', label: '84085' },
      { value: '84087', label: '84087' },
      { value: '84088', label: '84088' },
      { value: '84090', label: '84090' },
      { value: '84092', label: '84092' },
      { value: '84093', label: '84093' },
      { value: '84094', label: '84094' },
      { value: '84095', label: '84095' },
      { value: '84096', label: '84096' },
      { value: '84097', label: '84097' },
      { value: '84098', label: '84098' },
      { value: '84101', label: '84101' },
      { value: '84102', label: '84102' },
      { value: '84103', label: '84103' },
      { value: '84104', label: '84104' },
      { value: '84105', label: '84105' },
      { value: '84106', label: '84106' },
      { value: '84107', label: '84107' },
      { value: '84108', label: '84108' },
      { value: '84109', label: '84109' },
      { value: '84111', label: '84111' },
      { value: '84115', label: '84115' },
      { value: '84116', label: '84116' },
      { value: '84117', label: '84117' },
      { value: '84118', label: '84118' },
      { value: '84119', label: '84119' },
      { value: '84120', label: '84120' },
      { value: '84121', label: '84121' },
      { value: '84122', label: '84122' },
      { value: '84123', label: '84123' },
      { value: '84124', label: '84124' },
      { value: '84128', label: '84128' },
      { value: '84129', label: '84129' },
      { value: '84141', label: '84141' },
      { value: '84301', label: '84301' },
      { value: '84302', label: '84302' },
      { value: '84305', label: '84305' },
      { value: '84306', label: '84306' },
      { value: '84307', label: '84307' },
      { value: '84308', label: '84308' },
      { value: '84310', label: '84310' },
      { value: '84311', label: '84311' },
      { value: '84312', label: '84312' },
      { value: '84313', label: '84313' },
      { value: '84314', label: '84314' },
      { value: '84315', label: '84315' },
      { value: '84316', label: '84316' },
      { value: '84317', label: '84317' },
      { value: '84318', label: '84318' },
      { value: '84319', label: '84319' },
      { value: '84320', label: '84320' },
      { value: '84321', label: '84321' },
      { value: '84324', label: '84324' },
      { value: '84325', label: '84325' },
      { value: '84326', label: '84326' },
      { value: '84327', label: '84327' },
      { value: '84328', label: '84328' },
      { value: '84329', label: '84329' },
      { value: '84330', label: '84330' },
      { value: '84331', label: '84331' },
      { value: '84332', label: '84332' },
      { value: '84333', label: '84333' },
      { value: '84334', label: '84334' },
      { value: '84335', label: '84335' },
      { value: '84336', label: '84336' },
      { value: '84337', label: '84337' },
      { value: '84338', label: '84338' },
      { value: '84339', label: '84339' },
      { value: '84340', label: '84340' },
      { value: '84341', label: '84341' },
      { value: '84401', label: '84401' },
      { value: '84403', label: '84403' },
      { value: '84404', label: '84404' },
      { value: '84405', label: '84405' },
      { value: '84409', label: '84409' },
      { value: '84414', label: '84414' },
      { value: '84501', label: '84501' },
      { value: '84511', label: '84511' },
      { value: '84512', label: '84512' },
      { value: '84513', label: '84513' },
      { value: '84515', label: '84515' },
      { value: '84518', label: '84518' },
      { value: '84520', label: '84520' },
      { value: '84521', label: '84521' },
      { value: '84522', label: '84522' },
      { value: '84523', label: '84523' },
      { value: '84525', label: '84525' },
      { value: '84526', label: '84526' },
      { value: '84528', label: '84528' },
      { value: '84529', label: '84529' },
      { value: '84530', label: '84530' },
      { value: '84532', label: '84532' },
      { value: '84533', label: '84533' },
      { value: '84535', label: '84535' },
      { value: '84537', label: '84537' },
      { value: '84539', label: '84539' },
      { value: '84540', label: '84540' },
      { value: '84542', label: '84542' },
      { value: '84601', label: '84601' },
      { value: '84603', label: '84603' },
      { value: '84604', label: '84604' },
      { value: '84606', label: '84606' },
      { value: '84620', label: '84620' },
      { value: '84621', label: '84621' },
      { value: '84622', label: '84622' },
      { value: '84623', label: '84623' },
      { value: '84624', label: '84624' },
      { value: '84626', label: '84626' },
      { value: '84627', label: '84627' },
      { value: '84628', label: '84628' },
      { value: '84629', label: '84629' },
      { value: '84630', label: '84630' },
      { value: '84631', label: '84631' },
      { value: '84632', label: '84632' },
      { value: '84633', label: '84633' },
      { value: '84634', label: '84634' },
      { value: '84635', label: '84635' },
      { value: '84636', label: '84636' },
      { value: '84637', label: '84637' },
      { value: '84638', label: '84638' },
      { value: '84639', label: '84639' },
      { value: '84640', label: '84640' },
      { value: '84642', label: '84642' },
      { value: '84643', label: '84643' },
      { value: '84644', label: '84644' },
      { value: '84645', label: '84645' },
      { value: '84646', label: '84646' },
      { value: '84647', label: '84647' },
      { value: '84648', label: '84648' },
      { value: '84649', label: '84649' },
      { value: '84651', label: '84651' },
      { value: '84652', label: '84652' },
      { value: '84653', label: '84653' },
      { value: '84654', label: '84654' },
      { value: '84655', label: '84655' },
      { value: '84656', label: '84656' },
      { value: '84657', label: '84657' },
      { value: '84660', label: '84660' },
      { value: '84662', label: '84662' },
      { value: '84663', label: '84663' },
      { value: '84664', label: '84664' },
      { value: '84665', label: '84665' },
      { value: '84667', label: '84667' },
      { value: '84701', label: '84701' },
      { value: '84710', label: '84710' },
      { value: '84711', label: '84711' },
      { value: '84712', label: '84712' },
      { value: '84713', label: '84713' },
      { value: '84714', label: '84714' },
      { value: '84715', label: '84715' },
      { value: '84716', label: '84716' },
      { value: '84719', label: '84719' },
      { value: '84720', label: '84720' },
      { value: '84721', label: '84721' },
      { value: '84723', label: '84723' },
      { value: '84724', label: '84724' },
      { value: '84725', label: '84725' },
      { value: '84726', label: '84726' },
      { value: '84729', label: '84729' },
      { value: '84730', label: '84730' },
      { value: '84731', label: '84731' },
      { value: '84733', label: '84733' },
      { value: '84734', label: '84734' },
      { value: '84735', label: '84735' },
      { value: '84737', label: '84737' },
      { value: '84738', label: '84738' },
      { value: '84739', label: '84739' },
      { value: '84740', label: '84740' },
      { value: '84741', label: '84741' },
      { value: '84742', label: '84742' },
      { value: '84744', label: '84744' },
      { value: '84745', label: '84745' },
      { value: '84746', label: '84746' },
      { value: '84747', label: '84747' },
      { value: '84749', label: '84749' },
      { value: '84750', label: '84750' },
      { value: '84751', label: '84751' },
      { value: '84752', label: '84752' },
      { value: '84753', label: '84753' },
      { value: '84754', label: '84754' },
      { value: '84755', label: '84755' },
      { value: '84756', label: '84756' },
      { value: '84757', label: '84757' },
      { value: '84758', label: '84758' },
      { value: '84759', label: '84759' },
      { value: '84760', label: '84760' },
      { value: '84761', label: '84761' },
      { value: '84762', label: '84762' },
      { value: '84763', label: '84763' },
      { value: '84765', label: '84765' },
      { value: '84767', label: '84767' },
      { value: '84770', label: '84770' },
      { value: '84772', label: '84772' },
      { value: '84773', label: '84773' },
      { value: '84774', label: '84774' },
      { value: '84775', label: '84775' },
      { value: '84776', label: '84776' },
      { value: '84779', label: '84779' },
      { value: '84780', label: '84780' },
      { value: '84781', label: '84781' },
      { value: '84782', label: '84782' },
      { value: '84783', label: '84783' },
      { value: '84784', label: '84784' },
      { value: '84790', label: '84790' },
      { value: '86040', label: '86040' }
    ]
  )
}


export const residential = () => {
  return (
    [
      { value: '2-Story', label: '2-Story' },
      { value: 'A-Frame', label: 'A-Frame' },
      { value: 'Basement', label: 'Basement' },
      { value: 'Bungalow/Cottage', label: 'Bungalow/Cottage' },
      { value: 'Cabin', label: 'Cabin' },
      { value: 'Condo', label: 'Condo' },
      { value: 'High Rise', label: 'High Rise' },
      { value: 'Main Level', label: 'Main Level' },
      { value: 'Manufactured/Modular', label: 'Manufactured/Modular' },
      { value: 'Middle Level', label: 'Middle Level' },
      { value: 'Mobile', label: 'Mobile' },
      { value: 'Other/See Remarks', label: 'Other/See Remarks' },
      { value: 'Rambler/Ranch', label: 'Rambler/Ranch' },
      { value: 'Row-end', label: 'Row-end' },
      { value: 'Row-mid', label: 'Row-mid' },
      { value: 'Split-Entry/Bi-Level', label: 'Split-Entry/Bi-Level' },
      { value: 'Top Level', label: 'Top Level' },
      { value: 'Townhouse', label: 'Townhouse' },
      { value: 'Tri/Multi-Level', label: 'Tri/Multi-Level' },
      { value: 'Tudor', label: 'Tudor' },
      { value: 'Victorian', label: 'Victorian' }
    ]
  )
}

export const multiFamily = () => {
  return (
    [
      { value: '1 - Story', label: '1 - Story' },
      { value: '2 - Story', label: '2 - Story' },
      { value: '3 - Story', label: '3 - Story' },
      { value: '5-Plex', label: '5-Plex' },
      { value: 'Front And Rear', label: 'Front And Rear' },
      { value: 'Other/See Remarks', label: 'Other/See Remarks' },
      { value: 'Side By Side', label: 'Side By Side' },
      { value: 'Up And Down', label: 'Up And Down' }
    ]
  )
}

export const lotsAndLand = () => {
  return (
    [
      { value: 'Agricultural', label: 'Agricultural' },
      { value: 'Commercial', label: 'Commercial' },
      { value: 'Industrial', label: 'Industrial' },
      { value: 'Multi Housing', label: 'Multi Housing' },
      { value: 'Other', label: 'Other' },
      { value: 'Recreational', label: 'Recreational' },
      { value: 'Residential', label: 'Residential' }
    ]
  )
}

export const farm = () => {
  return (
    [
      { value: 'Agricultural Land on Greenbelt', label: 'Agricultural Land On Greenbelt' },
      { value: 'Agriculture', label: 'Agriculture' },
      { value: 'Alfalfa', label: 'Alfalfa' },
      { value: 'Alfalfa &amp; Grain', label: 'Alfalfa &amp; Grain' },
      { value: 'Alfalfa and pasture', label: 'Alfalfa And Pasture' },
      { value: 'Asparagus', label: 'Asparagus' },
      { value: 'Dairy', label: 'Dairy' },
      { value: 'Dairy and Crop Farm', label: 'Dairy And Crop Farm' },
      { value: 'Dry Farm', label: 'Dry Farm' },
      { value: 'Dryland', label: 'Dryland' },
      { value: 'Dryland grazing', label: 'Dryland Grazing' },
      { value: 'Equestrian Center with indoor arena', label: 'Equestrian Center With Indoor Arena' },
      { value: 'Grazing', label: 'Grazing' },
      { value: 'Hay', label: 'Hay' },
      { value: 'Hayfield', label: 'Hayfield' },
      { value: 'Horse Ranch', label: 'Horse Ranch' },
      { value: 'Irrigated', label: 'Irrigated' },
      { value: 'Irrigated Farm', label: 'Irrigated Farm' },
      { value: 'Irrigated graze or hay ground', label: 'Irrigated Graze Or Hay Ground' },
      { value: 'Land &amp; Water', label: 'Land &amp; Water' },
      { value: 'Livestock', label: 'Livestock' },
      { value: 'Livestock Operation', label: 'Livestock Operation' },
      { value: 'Meadow', label: 'Meadow' },
      { value: 'Orchard', label: 'Orchard' },
      { value: 'Part irrigated', label: 'Part Irrigated' },
      { value: 'part pasture', label: 'Part Pasture' },
      { value: 'Pasture', label: 'Pasture' },
      { value: 'Rotate Crops-Cattle', label: 'Rotate Crops-cattle' },
      { value: 'Wildlife', label: 'Wildlife' },
      { value: '79.50 Greenbelt Land', label: '79.50 Greenbelt Land' },
      { value: 'Life stock and horse property.', label: 'Life Stock And Horse Property.' }
    ]
  )
}

export const commercial = () => {
  return (
    [
      { value: 'Business + R.E.', label: 'Business + R.E.' },
      { value: 'Business Only', label: 'Business Only' },
      { value: 'Hotel/Motel', label: 'Hotel/Motel' },
      { value: 'Industrial', label: 'Industrial' },
      { value: 'Investment', label: 'Investment' },
      { value: 'Office', label: 'Office' },
      { value: 'Restaurant', label: 'Restaurant' },
      { value: 'Retail', label: 'Retail' },
      { value: 'Warehouse', label: 'Warehouse' }
    ]
  )
}
